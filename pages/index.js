import Head from 'next/head'
import { useEffect, useState } from 'react'
import { ToastContainer, toast, Flip } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';

import { Forecast } from '../components/Forecast'
import { TemperatureAndDetails } from '../components/TemperatureAndDetails'
import { TimeAndLocation } from '../components/TimeAndLocation'
import { Inputs } from '../components/topUi/Inputs'
import { TopButtons } from '../components/topUi/TopButtons'
import getFormattedWeatherData from '../services/weatherService'

export default function Home() {

  const [query, setQuery] = useState({q: 'ciudad valles'});
  const [units, setUnits] = useState('metric');
  const [weather, setWeather] = useState(null);

  useEffect(() => {

    const fetchWeather = async () => {

      const message = query.q ? query.q : 'current location';
      toast.info("Fetching weather for " + message);

      await getFormattedWeatherData({ ...query, units })
        .then( (data) => {
          toast.success(`Successfully fetched weather for ${data.name}, ${data.country}`);
          setWeather(data);
        });
    };
  
    fetchWeather();
  }, [query, units])

  const formatBackground = () => {
    if(!weather) return 'from-cyan-700 to-blue-700';
    const threshold = units === "metric" ? 30 : 86;
    if(weather.temp <= threshold) return 'from-cyan-700 to-blue-700';

    return 'from-yellow-700 to-orange-700';
  }

  return (
    <div
      className={`mx-auto max-w-5xl sm:p-6 bg-gradient-to-br antialiased
      ${formatBackground()} h-fit text-white`}
    >
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className='w-full'>
        <TopButtons setQuery={setQuery} />
        <Inputs setQuery={setQuery} units={units} setUnits={setUnits} />

        {
          weather && (
            <div className='flex weath:flex-row flex-col weath:h-96 w-full items-center'>
              <div className='bg-white/20 backdrop-blur-sm p-1 sm:p-4 w-full weath:w-7/12
                mb-5 weath:flex weath:flex-col weath:justify-center weath:mb-0 weath:h-full'
              >
                <TimeAndLocation weather={weather} />
                <TemperatureAndDetails weather={weather} />
              </div>
      
              <div className='flex flex-col justify-between weath:ml-4 weath:h-full w-full weath:w-5/12'>
                <Forecast title="hourly forecast" items={weather.hourly} />
                <Forecast title="daily forecast" items={weather.daily} />
              </div>

              <ToastContainer
                position="top-right"
                autoClose={2000}
                hideProgressBar={false}
                newestOnTop
                transition={Flip}
                closeOnClick
                rtl={false}
                pauseOnFocusLoss
                draggable
                pauseOnHover
              />
            </div>
          )
        }


      </main>

      <footer className="mt-7 pb-7 flex sm:pb-0 items-end justify-center relative">
          <span className='font-thin text-sm sm:text-lg italic -mb-0.5'>Data provided by </span>
          <img
            src='https://home.openweathermap.org/assets/logo_white-011958e697955be95bdc4af6a4d1913dbf9df990cb9101a67c439879293f5947.png'
            alt='openweather icon'
            className='sm:w-32 w-20 ml-2'
          />
          <div className='absolute right-0 flex items-end'>
            <img
              src='https://upload.wikimedia.org/wikipedia/commons/thumb/8/8e/Nextjs-logo.svg/207px-Nextjs-logo.svg.png'
              alt='nextjs logo'
              className='h-7 px-1 -mb-1'
            />
            <img
              src='https://upload.wikimedia.org/wikipedia/commons/thumb/9/95/Tailwind_CSS_logo.svg/512px-Tailwind_CSS_logo.svg.png'
              alt='tailwindcss logo'
              className='h-4 ml-2'
            />
          </div>
      </footer>
    </div>
  )
}
